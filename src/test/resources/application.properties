spring.config.import=classpath:netex-static-data.yml
spring.main.sources=no.rutebanken.extime

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=extime

avinor.airports.large=BGO,BOO,SVG,TRD

avinor.timetable.scheduler.consumer=quartz2://avinorTimetableScheduler?fireNow=true&trigger.repeatCount=0
avinor.timetable.period.months=1
avinor.timetable.max.range=180
avinor.timetable.min.range=60
avinor.timetable.feed.endpoint=https://flydata.avinor.no/XmlFeedScheduled.asp

avinor.timetable.dump.enabled=false
avinor.timetable.dump.output.path=target/flights

# Avinor realtime scheduler settings
avinor.realtime.scheduler.options=fireNow=true&trigger.repeatCount=0
avinor.realtime.feed.endpoint=https://flydata.avinor.no/XmlFeed.asp
avinor.realtime.departures.timefrom=0
avinor.realtime.departures.timeto=72
avinor.realtime.arrivals.timefrom=0
avinor.realtime.arrivals.timeto=96

# Avinor airport service settings
avinor.airport.feed.endpoint=https://flydata.avinor.no/airportNames.asp

# Avinor airline service settings
avinor.airline.feed.endpoint=https://flydata.avinor.no/airlineNames.asp

# NeTEx generation settings
netex.generated.output.path=target/netex
netex.compressed.output.path=target/data/zip
netex.compressed.file.prefix=avinor-netex_

# local blob store used for testing
spring.profiles.active=local-disk-blobstore
blobstore.local.folder=target/blobstore/inbound/received/avi/

# GCS blob store used when deploying to Google Cloud
#spring.profiles.active=gcs-blobstore
#blobstore.gcs.bucket.name=marduk-test-exchange
#blobstore.gcs.project.id=test
#blobstore.gcs.credential.path=/path/to/credentials

blobstore.provider.id=21
blobstore.blob.path=inbound/received/avi/


# Marduk notification queue name
queue.upload.destination.name=MardukInboundTestQueue

camel.component.google-pubsub.endpoint=localhost:8079

spring.cloud.gcp.project-id=test
spring.cloud.gcp.pubsub.project-id=test
# Path to credential for accessing the Google Cloud project, using the Spring resource syntax (prefixed with file:)
#spring.cloud.gcp.pubsub.credentials.location=file:/path/to/json/file
# if this property is present then the client library connects to the PubSub emulator instead of Google Cloud
spring.cloud.gcp.pubsub.emulatorHost=localhost:8079
# number of parallel pullers for a given Subscriber. Constrained by the number of threads in the executor.
spring.cloud.gcp.pubsub.subscriber.parallel-pull-count=1
# number of executor threads (shared by all subscribers)
spring.cloud.gcp.pubsub.subscriber.executor-threads=30
# the client library will automatically extend the ack deadline up to this limit.
spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period=36000
# number of threads performing ack deadline extension  (shared by all subscribers). The default value is 5
#entur.pubsub.subscriber.system-threads=5
# path to Google PubSub emulator
# default path if the property is not set (retrieved as a Maven dependency):
#entur.pubsub.emulator.path=target/pubsub-emulator/pubsub-emulator-0.1-SNAPSHOT.jar

# Logging settings
# debug=true
logging.level.org.apache=INFO
logging.level.org.apache.http.wire=INFO

logging.level.no.rutebanken=DEBUG

# Monitoring settings
spring.jmx.enabled=true
management.port=9001
management.address=127.0.0.1

