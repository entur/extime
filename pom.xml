<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.rutebanken.superpom</groupId>
        <artifactId>superpom</artifactId>
        <version>0.0.5</version>
    </parent>

    <groupId>no.rutebanken.extime</groupId>
    <artifactId>extime</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>extime</name>
    <description>
        Spring boot camel routes for fetching of timetable and realtime data from non compliant sources (NeTEx/SIRI)
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- versions for use in mvn plugins as we cannot inherit them from a BOM -->
        <docker.maven.plugin.version>0.13.9</docker.maven.plugin.version>
        <spring-boot-plugin.version>1.3.5.RELEASE</spring-boot-plugin.version>
        <spring-boot.version>1.3.5.RELEASE</spring-boot.version>
        <camel.version>2.17.0</camel.version>

        <!-- Docker & Fabric8 Configs -->
        <docker.from>eu.gcr.io/carbon-1287/java-base-image</docker.from>
        <fabric8.dockerUser>carbon-1287/</fabric8.dockerUser>
        <docker.image>eu.gcr.io/${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>

        <!-- fabric8.env.AB_JOLOKIA_AUTH_OPENSHIFT>true</fabric8.env.AB_JOLOKIA_AUTH_OPENSHIFT -->
        <fabric8.label.component>${project.artifactId}</fabric8.label.component>
        <fabric8.label.container>spring-boot</fabric8.label.container>
        <fabric8.label.group>rutebanken</fabric8.label.group>
        <fabric8.iconRef>camel</fabric8.iconRef>

        <docker.port.container.jolokia>8080</docker.port.container.jolokia>

        <!-- NB: Concious choice of using snapshot version. This is to keep in
            sync, and fail fast if incompatibilities -->
        <netex-java-model.version>0.0.9-SNAPSHOT</netex-java-model.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Compile Scope -->
        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-runtime</artifactId>
            <version>0.11.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-metrics</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http4</artifactId>
            <version>${camel.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-servlet_3.0_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-quartz2</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jaxb</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-stax</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cache</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-zipfile</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-servlet_3.0_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Misc. -->
        <dependency>
            <groupId>com.migesok</groupId>
            <artifactId>jaxb-java-time-adapters</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.onebusaway</groupId>
            <artifactId>onebusaway-gtfs</artifactId>
            <version>1.3.4</version>
        </dependency>
        <dependency>
            <groupId>org.rutebanken</groupId>
            <artifactId>netex-java-model</artifactId>
            <version>${netex-java-model.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rutebanken.helpers</groupId>
            <artifactId>gcp-storage</artifactId>
            <version>0.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.rutebanken</groupId>
            <artifactId>siri-java-model</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-zip</artifactId>
            <version>1.9</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.4.Final</version>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-storage</artifactId>
            <version>0.3.0</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-http2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- transitive dependency of camel-cache, remove when able authenticate with nexus again -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.4.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.13.1</version>
                <executions>
                    <execution>
                        <id>xjc-scheduled</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <extension>true</extension>
                            <generatePackage>no.avinor.flydata.xjc.model.scheduled</generatePackage>
                            <generateDirectory>${project.build.directory}/generated-sources/scheduled</generateDirectory>
                            <args>
                                <arg>-Xequals</arg>
                                <arg>-XhashCode</arg>
                                <arg>-XtoString</arg>
                            </args>
                            <schemaDirectory>src/main/resources/no/rutebanken/extime/avinor/scheduled</schemaDirectory>
                            <schemaIncludes>
                                <include>XmlFeedScheduled-Named.xsd</include>
                            </schemaIncludes>
                            <bindingIncludes>
                                <include>XmlFeedScheduled.xjb</include>
                            </bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb2_commons</groupId>
                                    <artifactId>jaxb2-basics</artifactId>
                                    <version>0.11.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-flights</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <extension>true</extension>
                            <generatePackage>no.avinor.flydata.xjc.model.feed</generatePackage>
                            <generateDirectory>${project.build.directory}/generated-sources/feed</generateDirectory>
                            <args>
                                <arg>-Xequals</arg>
                                <arg>-XhashCode</arg>
                                <arg>-XtoString</arg>
                            </args>
                            <schemaDirectory>src/main/resources/no/rutebanken/extime/avinor/feed</schemaDirectory>
                            <schemaIncludes>
                                <include>XmlFeed-Named.xsd</include>
                            </schemaIncludes>
                            <bindingIncludes>
                                <include>feed.xjb</include>
                            </bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb2_commons</groupId>
                                    <artifactId>jaxb2-basics</artifactId>
                                    <version>0.11.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-airports</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <extension>true</extension>
                            <generatePackage>no.avinor.flydata.xjc.model.airport</generatePackage>
                            <generateDirectory>${project.build.directory}/generated-sources/airports</generateDirectory>
                            <args>
                                <arg>-Xequals</arg>
                                <arg>-XhashCode</arg>
                                <arg>-XtoString</arg>
                            </args>
                            <schemaDirectory>src/main/resources/no/rutebanken/extime/avinor/airports</schemaDirectory>
                            <schemaIncludes>
                                <include>airportNames-named.xsd</include>
                            </schemaIncludes>
                            <bindingIncludes>
                                <include>airportNames.xjb</include>
                            </bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb2_commons</groupId>
                                    <artifactId>jaxb2-basics</artifactId>
                                    <version>0.11.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-airlines</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <extension>true</extension>
                            <generatePackage>no.avinor.flydata.xjc.model.airline</generatePackage>
                            <generateDirectory>${project.build.directory}/generated-sources/airlines</generateDirectory>
                            <args>
                                <arg>-Xequals</arg>
                                <arg>-XhashCode</arg>
                                <arg>-XtoString</arg>
                            </args>
                            <schemaDirectory>src/main/resources/no/rutebanken/extime/avinor/airlines</schemaDirectory>
                            <schemaIncludes>
                                <include>airlineNames-named.xsd</include>
                            </schemaIncludes>
                            <bindingIncludes>
                                <include>airlineNames.xjb</include>
                            </bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb2_commons</groupId>
                                    <artifactId>jaxb2-basics</artifactId>
                                    <version>0.11.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>download-netex-xsd</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/rutebanken/NeTEx-XML/archive/1.04beta.zip</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/classes/xsd</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <inherited>true</inherited>
                <configuration>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-plugin.version}</version>
<!--
                <configuration>
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
                    </jvmArguments>
                </configuration>
-->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <basedir>/deployments</basedir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <env>
                                    <JAVA_APP_JAR>${project.build.finalName}.jar</JAVA_APP_JAR>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
      <profile>
          <id>rutebanken</id>
          <properties>
              <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
              <fabric8.recreate>true</fabric8.recreate>
          </properties>
          <build>
              <!-- Missing fabric8:apply, as this crashed (probably due to missing fabric8) -->
              <defaultGoal>clean install docker:build docker:push fabric8:json</defaultGoal>
          </build>
      </profile>
        <profile>
            <id>f8-build</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-deploy</id>
            <properties>
                <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-local-deploy</id>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
    </profiles>

</project>
